{"mappings":"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","sources":["src/dashboard/Settings.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\r\nimport { createRoot } from 'react-dom/client';\r\nimport { styled } from 'styled-components';\r\nimport { HeadText, SettingsButton } from './components/Layout';\r\nimport { BackgroundMode, WeaponFilter, WeaponMode } from '../types/types';\r\nimport { useReplicant } from '../utils/use-replicant';\r\nimport { getWeaponClassNames } from '../utils/WeaponDatabase';\r\n\r\nconst weaponClassNames = getWeaponClassNames();\r\n\r\nexport function Settings() {\r\n\tconst [mode, setMode] = useReplicant<WeaponMode>('mode', {\r\n\t\tdefaultValue: WeaponMode.Salmon\r\n\t});\r\n\r\n\tconst [filter, setFilter] = useReplicant<WeaponFilter>('filter', {\r\n\t\tdefaultValue: { weaponClasses: weaponClassNames.slice(), firstKit: true, secondKit: true, thirdKit: true, baseKit: true, cosmeticKit: true, seen: true, unseen: true }\r\n\t})\r\n\r\n\tconst setFilterWeaponClass = useCallback((weaponClass: string) => {\r\n\t\tif(filter.weaponClasses.includes(weaponClass)) {\r\n\t\t\tsetFilter({ ...filter, weaponClasses: filter.weaponClasses.filter((value) => value !== weaponClass)})\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetFilter({ ...filter, weaponClasses: [...filter.weaponClasses, weaponClass]})\r\n\t\t}\r\n\t}, [filter]);\r\n\r\n\tconst [progressBar, setProgressBar] = useReplicant<boolean>('progressBar', { defaultValue: true });\r\n\r\n\tconst [background, setBackground] = useReplicant<BackgroundMode>('background', { defaultValue: BackgroundMode.Transparent });\r\n\r\n\treturn (\r\n\t\t<Wrapper>\r\n\t\t\t\t<HeadText $content=\"Mode\">Mode</HeadText>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<SettingsButton\r\n\t\t\t\t\t$content=\"Standard\"\r\n\t\t\t\t\t$colorTag='standard'\r\n\t\t\t\t\t$selected={mode === WeaponMode.Standard}\r\n\t\t\t\t\tonClick={() => { setMode(WeaponMode.Standard); }}>Standard</SettingsButton>\r\n\t\t\t\t\t<SettingsButton \r\n\t\t\t\t\t$content=\"Salmon Run\"\r\n\t\t\t\t\t$colorTag='salmon'\r\n\t\t\t\t\t$selected={mode === WeaponMode.Salmon}\r\n\t\t\t\t\tonClick={() => { setMode(WeaponMode.Salmon); }}>Salmon Run</SettingsButton>\r\n\t\t\t\t\t<SettingsButton\r\n\t\t\t\t\t$content=\"Grizzco Only\"\r\n\t\t\t\t\t$colorTag='grizzco'\r\n\t\t\t\t\t$selected={mode === WeaponMode.Grizzco}\r\n\t\t\t\t\tonClick={() => { setMode(WeaponMode.Grizzco); }}>Grizzco Only</SettingsButton>\r\n\t\t\t\t\t<SettingsButton\r\n\t\t\t\t\t$content=\"Side Order\"\r\n\t\t\t\t\t$colorTag='order'\r\n\t\t\t\t\t$selected={mode === WeaponMode.Order}\r\n\t\t\t\t\tonClick={() => { setMode(WeaponMode.Order); }}>Side Order</SettingsButton>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<HeadText $content=\"Filters\">Filters</HeadText>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t{weaponClassNames.map((weaponClass, index) => (\r\n\t\t\t\t\t\t<SettingsButton\r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t$content={weaponClass}\r\n\t\t\t\t\t\t\t$colorTag={weaponClass.toLowerCase()}\r\n\t\t\t\t\t\t\t$selected={filter.weaponClasses.includes(weaponClass)}\r\n\t\t\t\t\t\t\tonClick={() => { setFilterWeaponClass(weaponClass);  }}>{weaponClass}</SettingsButton>\r\n\t\t\t\t\t))\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<SettingsButton\r\n\t\t\t\t\t\t$content=\"First Kits\"\r\n\t\t\t\t\t\t$colorTag='first'\r\n\t\t\t\t\t\t$selected={filter.firstKit}\r\n\t\t\t\t\t\tonClick={() => { setFilter({ ...filter, firstKit: !filter.firstKit }); }}>First Kits</SettingsButton>\r\n\t\t\t\t\t<SettingsButton\r\n\t\t\t\t\t\t$content=\"Second Kits\"\r\n\t\t\t\t\t\t$colorTag='second'\r\n\t\t\t\t\t\t$selected={filter.secondKit}\r\n\t\t\t\t\t\tonClick={() => { setFilter({ ...filter, secondKit: !filter.secondKit }); }}>Second Kits</SettingsButton>\r\n\t\t\t\t\t<SettingsButton\r\n\t\t\t\t\t\t$content=\"Third Kits\"\r\n\t\t\t\t\t\t$colorTag='third'\r\n\t\t\t\t\t\t$selected={filter.thirdKit}\r\n\t\t\t\t\t\tonClick={() => { setFilter({ ...filter, thirdKit: !filter.thirdKit }); }}>Third Kits</SettingsButton>\r\n\t\t\t\t\t<SettingsButton\r\n\t\t\t\t\t\t$content=\"Base Kits\"\r\n\t\t\t\t\t\t$colorTag='standard'\r\n\t\t\t\t\t\t$selected={filter.baseKit}\r\n\t\t\t\t\t\tonClick={() => { setFilter({ ...filter, baseKit: !filter.baseKit }); }}>Base Kits</SettingsButton>\r\n\t\t\t\t\t<SettingsButton\r\n\t\t\t\t\t\t$content=\"Cosmetics\"\r\n\t\t\t\t\t\t$colorTag='order'\r\n\t\t\t\t\t\t$selected={filter.cosmeticKit}\r\n\t\t\t\t\t\tonClick={() => { setFilter({ ...filter, cosmeticKit: !filter.cosmeticKit }); }}>Cosmetics</SettingsButton>\r\n\t\t\t\t</Row>\r\n\t\t\t\t\r\n\t\t\t\t<HeadText $content=\"Dashboard Filters\">Dashboard Filters</HeadText>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<SettingsButton\r\n\t\t\t\t\t\t$content=\"Unseen\"\r\n\t\t\t\t\t\t$colorTag='reset'\r\n\t\t\t\t\t\t$selected={filter.unseen}\r\n\t\t\t\t\t\tonClick={() => { setFilter({ ...filter, unseen: !filter.unseen }); }}>Unseen</SettingsButton>\r\n\t\t\t\t\t<SettingsButton\r\n\t\t\t\t\t\t$content=\"Seen\"\r\n\t\t\t\t\t\t$colorTag='import'\r\n\t\t\t\t\t\t$selected={filter.seen}\r\n\t\t\t\t\t\tonClick={() => { setFilter({ ...filter, seen: !filter.seen }); }}>Seen</SettingsButton>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<HeadText $content=\"Progress Bar\">Progress Bar</HeadText>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<SettingsButton\r\n\t\t\t\t\t$content=\"Off\"\r\n\t\t\t\t\t$colorTag='reset'\r\n\t\t\t\t\t$selected={!progressBar}\r\n\t\t\t\t\tonClick={() => { setProgressBar(false); }}>Off</SettingsButton>\r\n\t\t\t\t\t<SettingsButton \r\n\t\t\t\t\t$content=\"On\"\r\n\t\t\t\t\t$colorTag='import'\r\n\t\t\t\t\t$selected={progressBar}\r\n\t\t\t\t\tonClick={() => { setProgressBar(true); }}>On</SettingsButton>\r\n\t\t\t\t</Row>\r\n\t\t\t\t<HeadText $content=\"Background\">Background</HeadText>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<SettingsButton\r\n\t\t\t\t\t$content=\"Transparent\"\r\n\t\t\t\t\t$colorTag='transparent'\r\n\t\t\t\t\t$selected={background === BackgroundMode.Transparent}\r\n\t\t\t\t\tonClick={() => { setBackground(BackgroundMode.Transparent); }}>Transparent</SettingsButton>\r\n\t\t\t\t\t<SettingsButton \r\n\t\t\t\t\t$content=\"Black\"\r\n\t\t\t\t\t$colorTag='black'\r\n\t\t\t\t\t$selected={background === BackgroundMode.Black}\r\n\t\t\t\t\tonClick={() => { setBackground(BackgroundMode.Black); }}>Black</SettingsButton>\r\n\t\t\t\t\t<SettingsButton\r\n\t\t\t\t\t$content=\"White\"\r\n\t\t\t\t\t$colorTag='white'\r\n\t\t\t\t\t$selected={background === BackgroundMode.White}\r\n\t\t\t\t\tonClick={() => { setBackground(BackgroundMode.White); }}>White</SettingsButton>\r\n\t\t\t\t</Row>\r\n\t\t</Wrapper>\r\n\t)\r\n}\r\n\r\nconst Wrapper = styled.div`\r\n\tposition: relative;\r\n\twidth: 100%;\r\n\tpadding: 15px 5px;\r\n\r\n\tdisplay: grid;\r\n\tgrid-template-columns: 140px 1fr;\r\n\talign-items: center;\r\n\ttext-align: right;\r\n\tgap: 15px;\r\n`;\r\n\r\nconst Row = styled.div`\r\n\tposition: relative;\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-direction: row;\r\n\tflex-wrap: wrap;\r\n\tgap: 5px;\r\n`;\r\n\r\nconst root = createRoot(document.getElementById('root')!);\r\nroot.render(<Settings />);"],"names":["React","useCallback","createRoot","styled","HeadText","SettingsButton","BackgroundMode","WeaponFilter","WeaponMode","useReplicant","getWeaponClassNames","weaponClassNames","Settings","mode","setMode","defaultValue","Salmon","filter","setFilter","weaponClasses","slice","firstKit","secondKit","thirdKit","baseKit","cosmeticKit","seen","unseen","setFilterWeaponClass","weaponClass","includes","value","progressBar","setProgressBar","background","setBackground","Transparent","Standard","Grizzco","Order","map","index","toLowerCase","Black","White","Wrapper","div","withConfig","displayName","componentId","Row","root","document","getElementById","render"],"version":3,"file":"settings.01788f3c.js.map","sourceRoot":"../"}